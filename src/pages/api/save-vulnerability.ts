import { NextApiRequest, NextApiResponse } from 'next'
import { connectToDatabase } from '@/utils/database'
import { Vulnerability } from '@/models/Vulnerability'
import { authenticateToken } from '@/utils/auth'

export default authenticateToken(async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method not allowed' })
  }

  try {
    await connectToDatabase()

    const { processName, likelihood, impact } = req.body
    const userId = req.user.userId

    const vulnerabilityScore = Number(likelihood) * Number(impact)

    const vulnerability = new Vulnerability({
      userId,
      processName,
      likelihood,
      impact,
      vulnerabilityScore
    })

    await vulnerability.save()

    res.status(201).json({ message: 'Vulnerability saved successfully' })
  } catch (error) {
    console.error('Save vulnerability error:', error)
    res.status(500).json({ message: 'Internal server error' })
  }
})
